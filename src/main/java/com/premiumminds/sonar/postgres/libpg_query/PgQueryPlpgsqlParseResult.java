package com.premiumminds.sonar.postgres.libpg_query;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PgQueryPlpgsqlParseResult extends Structure {
    /** C type : char* */
    public Pointer plpgsql_funcs;
    /** C type : PgQueryError* */
    public PgQueryError.ByReference error;
    public PgQueryPlpgsqlParseResult() {
        super();
    }
    protected List<String> getFieldOrder() {
        return Arrays.asList("plpgsql_funcs", "error");
    }
    /**
     * @param plpgsql_funcs C type : char*<br>
     * @param error C type : PgQueryError*
     */
    public PgQueryPlpgsqlParseResult(Pointer plpgsql_funcs, PgQueryError.ByReference error) {
        super();
        this.plpgsql_funcs = plpgsql_funcs;
        this.error = error;
    }
    public PgQueryPlpgsqlParseResult(Pointer peer) {
        super(peer);
    }
    public static class ByReference extends PgQueryPlpgsqlParseResult implements Structure.ByReference {

    };
    public static class ByValue extends PgQueryPlpgsqlParseResult implements Structure.ByValue {

    };
}