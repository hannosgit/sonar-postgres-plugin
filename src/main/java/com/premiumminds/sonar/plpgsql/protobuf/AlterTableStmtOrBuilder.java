// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

package com.premiumminds.sonar.plpgsql.protobuf;

public interface AlterTableStmtOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.AlterTableStmt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return Whether the relation field is set.
   */
  boolean hasRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return The relation.
   */
  com.premiumminds.sonar.plpgsql.protobuf.RangeVar getRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.RangeVarOrBuilder getRelationOrBuilder();

  /**
   * <code>repeated .pg_query.Node cmds = 2 [json_name = "cmds"];</code>
   */
  java.util.List<com.premiumminds.sonar.plpgsql.protobuf.Node> 
      getCmdsList();
  /**
   * <code>repeated .pg_query.Node cmds = 2 [json_name = "cmds"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.Node getCmds(int index);
  /**
   * <code>repeated .pg_query.Node cmds = 2 [json_name = "cmds"];</code>
   */
  int getCmdsCount();
  /**
   * <code>repeated .pg_query.Node cmds = 2 [json_name = "cmds"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder> 
      getCmdsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node cmds = 2 [json_name = "cmds"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder getCmdsOrBuilder(
      int index);

  /**
   * <code>.pg_query.ObjectType relkind = 3 [json_name = "relkind"];</code>
   * @return The enum numeric value on the wire for relkind.
   */
  int getRelkindValue();
  /**
   * <code>.pg_query.ObjectType relkind = 3 [json_name = "relkind"];</code>
   * @return The relkind.
   */
  com.premiumminds.sonar.plpgsql.protobuf.ObjectType getRelkind();

  /**
   * <code>bool missing_ok = 4 [json_name = "missing_ok"];</code>
   * @return The missingOk.
   */
  boolean getMissingOk();
}
