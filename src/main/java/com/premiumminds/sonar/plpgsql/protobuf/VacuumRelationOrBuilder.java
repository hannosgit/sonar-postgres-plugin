// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

package com.premiumminds.sonar.plpgsql.protobuf;

public interface VacuumRelationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.VacuumRelation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return Whether the relation field is set.
   */
  boolean hasRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   * @return The relation.
   */
  com.premiumminds.sonar.plpgsql.protobuf.RangeVar getRelation();
  /**
   * <code>.pg_query.RangeVar relation = 1 [json_name = "relation"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.RangeVarOrBuilder getRelationOrBuilder();

  /**
   * <code>uint32 oid = 2 [json_name = "oid"];</code>
   * @return The oid.
   */
  int getOid();

  /**
   * <code>repeated .pg_query.Node va_cols = 3 [json_name = "va_cols"];</code>
   */
  java.util.List<com.premiumminds.sonar.plpgsql.protobuf.Node> 
      getVaColsList();
  /**
   * <code>repeated .pg_query.Node va_cols = 3 [json_name = "va_cols"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.Node getVaCols(int index);
  /**
   * <code>repeated .pg_query.Node va_cols = 3 [json_name = "va_cols"];</code>
   */
  int getVaColsCount();
  /**
   * <code>repeated .pg_query.Node va_cols = 3 [json_name = "va_cols"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder> 
      getVaColsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node va_cols = 3 [json_name = "va_cols"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder getVaColsOrBuilder(
      int index);
}
