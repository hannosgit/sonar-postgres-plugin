// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pg_query.proto

package com.premiumminds.sonar.plpgsql.protobuf;

public interface RangeTableFuncOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pg_query.RangeTableFunc)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>bool lateral = 1 [json_name = "lateral"];</code>
   * @return The lateral.
   */
  boolean getLateral();

  /**
   * <code>.pg_query.Node docexpr = 2 [json_name = "docexpr"];</code>
   * @return Whether the docexpr field is set.
   */
  boolean hasDocexpr();
  /**
   * <code>.pg_query.Node docexpr = 2 [json_name = "docexpr"];</code>
   * @return The docexpr.
   */
  com.premiumminds.sonar.plpgsql.protobuf.Node getDocexpr();
  /**
   * <code>.pg_query.Node docexpr = 2 [json_name = "docexpr"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder getDocexprOrBuilder();

  /**
   * <code>.pg_query.Node rowexpr = 3 [json_name = "rowexpr"];</code>
   * @return Whether the rowexpr field is set.
   */
  boolean hasRowexpr();
  /**
   * <code>.pg_query.Node rowexpr = 3 [json_name = "rowexpr"];</code>
   * @return The rowexpr.
   */
  com.premiumminds.sonar.plpgsql.protobuf.Node getRowexpr();
  /**
   * <code>.pg_query.Node rowexpr = 3 [json_name = "rowexpr"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder getRowexprOrBuilder();

  /**
   * <code>repeated .pg_query.Node namespaces = 4 [json_name = "namespaces"];</code>
   */
  java.util.List<com.premiumminds.sonar.plpgsql.protobuf.Node> 
      getNamespacesList();
  /**
   * <code>repeated .pg_query.Node namespaces = 4 [json_name = "namespaces"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.Node getNamespaces(int index);
  /**
   * <code>repeated .pg_query.Node namespaces = 4 [json_name = "namespaces"];</code>
   */
  int getNamespacesCount();
  /**
   * <code>repeated .pg_query.Node namespaces = 4 [json_name = "namespaces"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder> 
      getNamespacesOrBuilderList();
  /**
   * <code>repeated .pg_query.Node namespaces = 4 [json_name = "namespaces"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder getNamespacesOrBuilder(
      int index);

  /**
   * <code>repeated .pg_query.Node columns = 5 [json_name = "columns"];</code>
   */
  java.util.List<com.premiumminds.sonar.plpgsql.protobuf.Node> 
      getColumnsList();
  /**
   * <code>repeated .pg_query.Node columns = 5 [json_name = "columns"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.Node getColumns(int index);
  /**
   * <code>repeated .pg_query.Node columns = 5 [json_name = "columns"];</code>
   */
  int getColumnsCount();
  /**
   * <code>repeated .pg_query.Node columns = 5 [json_name = "columns"];</code>
   */
  java.util.List<? extends com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder> 
      getColumnsOrBuilderList();
  /**
   * <code>repeated .pg_query.Node columns = 5 [json_name = "columns"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.NodeOrBuilder getColumnsOrBuilder(
      int index);

  /**
   * <code>.pg_query.Alias alias = 6 [json_name = "alias"];</code>
   * @return Whether the alias field is set.
   */
  boolean hasAlias();
  /**
   * <code>.pg_query.Alias alias = 6 [json_name = "alias"];</code>
   * @return The alias.
   */
  com.premiumminds.sonar.plpgsql.protobuf.Alias getAlias();
  /**
   * <code>.pg_query.Alias alias = 6 [json_name = "alias"];</code>
   */
  com.premiumminds.sonar.plpgsql.protobuf.AliasOrBuilder getAliasOrBuilder();

  /**
   * <code>int32 location = 7 [json_name = "location"];</code>
   * @return The location.
   */
  int getLocation();
}
